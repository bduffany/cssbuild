.foo {
  color: red;
}

.foo .bar .foo-bar {
  --x: 0;
}

.foo,
.bar,
.baz {
  --x: 0;
}

.foo ~ div,
.foo + #id,
.foo > [data-some-attr^='.do-not-touch'] {
  --x: 0;
}

.foo :global(.bar) {
  --x: 0;
}

.foo :global .bar {
  --x: 0;
}

.foo :is(:global(.bar), .baz) {
  --x: 0;
}

:global .bar :local .foo {
  --x: 0;
}

:where(.foo, :global(.bar)) .foo {
  --x: 0;
}

@keyframes foo {
}

@-webkit-keyframes foo {
}

@-moz-keyframes foo {
}

.foo {
  animation: 1s cubic-bezier(0, 0, 0, 0) infinite foobar-animation,
    2s infinite infinite;
  -webkit-animation: 1s infinite foobar-animation;
  -moz-animation: 1s infinite foobar-animation;
}

.foo {
  animation-name: foo, bar;
  -webkit-animation-name: foo, bar;
  -moz-animation-name: foo, bar;
}

@keyframes :global(bar) {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.foo :global {
  animation: 1s infinite bar;
}

@media screen and (max-width: 1280px) {
  .foo :global .bar {
    width: 100%;
  }
}
